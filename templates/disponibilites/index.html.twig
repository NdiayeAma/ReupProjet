{% extends 'base.html.twig' %}

{% block title %}Disponibilités{% endblock %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        #calendrier {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
        }
        .modal-dialog {
            max-width: 500px;
        }
        a {
            text-decoration: none;
        }
        #event-list {
            max-height: 600px;
            overflow-y: auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .event-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }
        .event-color {
            display: inline-block;
            width: 12px;
            height: 12px;
            margin-right: 8px;
            border-radius: 50%;
        }
    </style>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.14/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let calendarInstance;
            let currentEvent;

            const eventsData = {{ data|raw }};
            const evenementsList = JSON.parse('{{ evenements|e('js') }}');

            function updateEventList() {
                const eventList = document.getElementById('event-list');
                eventList.innerHTML = '';

                evenementsList.forEach(event => {
                    const eventItem = document.createElement('div');
                    eventItem.className = 'event-item';
                    eventItem.innerHTML = `<span class="event-color" style="background-color: ${event.couleur};"></span><strong>${event.nom}</strong><br>${event.datedebut} - ${event.datefin}`;
                    eventList.appendChild(eventItem);
                });
            }

            let calendarElt = document.querySelector("#calendrier");
            calendarInstance = new FullCalendar.Calendar(calendarElt, {
                initialView: 'dayGridMonth',
                locale: 'fr',
                timeZone: 'Europe/Paris',
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek'
                },
                editable: true,
                selectable: true,
                eventResizableFromStart: true,
                dateClick: function(info) {
                    showEventForm(info.dateStr);
                },
                eventClick: function(info) {
                    currentEvent = info.event;
                    showEventForm(info.event.startStr, info.event.endStr, true);
                },
                events: eventsData,
                eventDidMount: function(info) {
                    // Ajoute la couleur aux événements du calendrier
                    const event = evenementsList.find(e => e.id == info.event.id);
                    if (event) {
                        info.el.style.backgroundColor = event.couleur;
                    }
                },
                timeFormat: 'H:mm',
            });

            calendarInstance.render();
            updateEventList();

            function showEventForm(startDate, endDate, isEdit = false) {
                const eventModal = new bootstrap.Modal(document.getElementById('eventModal'), {});
                eventModal.show();
                document.getElementById('eventDate').value = startDate ? startDate.split('T')[0] : '';
                document.getElementById('startTime').value = startDate ? startDate.split('T')[1].slice(0, 5) : '';
                document.getElementById('endTime').value = endDate ? endDate.split('T')[1].slice(0, 5) : '';
                document.getElementById('eventSubmit').textContent = isEdit ? 'Modifier' : 'Ajouter';
                document.getElementById('deleteEvent').style.display = isEdit ? 'block' : 'none';
            }

            document.getElementById('eventForm').addEventListener('submit', function(e) {
                e.preventDefault();

                let startDate = document.getElementById('eventDate').value + 'T' + document.getElementById('startTime').value + ':00';
                let endDate = document.getElementById('eventDate').value + 'T' + document.getElementById('endTime').value + ':00';

                if (currentEvent) {
                    currentEvent.setStart(startDate);
                    currentEvent.setEnd(endDate);
                    fetch(`/disponibilite/update-disponibilite/${currentEvent.id}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': '{{ csrf_token('update-disponibilite') }}'
                        },
                        body: JSON.stringify({ debut: startDate, fin: endDate })
                    }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const eventModal = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
                                eventModal.hide();
                                updateEventList(); // Actualiser la liste des événements
                            } else {
                                console.error('Erreur lors de la mise à jour de la disponibilité');
                            }
                        });
                } else {
                    fetch('/add-disponibilite', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': '{{ csrf_token('add-disponibilite') }}'
                        },
                        body: JSON.stringify({ debut: startDate, fin: endDate })
                    }).then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                calendarInstance.addEvent({ id: data.id, title: 'Nouvel événement', start: startDate, end: endDate });
                                const eventModal = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
                                eventModal.hide();
                                updateEventList(); // Actualiser la liste des événements
                            } else {
                                console.error('Erreur lors de l\'ajout de la disponibilité');
                            }
                        });
                }
            });

            document.getElementById('deleteEvent').addEventListener('click', function() {
                if (!currentEvent) return;

                fetch(`/disponibilite/delete-disponibilite/${currentEvent.id}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token('delete-disponibilite') }}'
                    }
                }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            currentEvent.remove();
                            const eventModal = bootstrap.Modal.getInstance(document.getElementById('eventModal'));
                            eventModal.hide();
                            updateEventList(); // Actualiser la liste des événements
                        } else {
                            console.error('Erreur lors de la suppression de la disponibilité');
                        }
                    });
            });

            document.getElementById('eventModal').addEventListener('hidden.bs.modal', function () {
                document.getElementById('eventForm').reset();
                currentEvent = null;
            });

        });
    </script>
{% endblock %}

{% block body %}
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div id="calendrier"></div>
            </div>
            <div class="col-md-4">
                <div id="event-list">
                    <h5>Événements à venir</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Bootstrap pour ajouter une disponibilité -->
    <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Ajouter / Modifier une disponibilité</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="eventForm">
                        <div class="mb-3">
                            <label for="startTime" class="form-label">Heure de début</label>
                            <input type="time" class="form-control" id="startTime" required>
                        </div>
                        <div class="mb-3">
                            <label for="endTime" class="form-label">Heure de fin</label>
                            <input type="time" class="form-control" id="endTime" required>
                        </div>
                        <input type="hidden" id="eventDate">
                        <button type="submit" class="btn btn-primary" id="eventSubmit">Ajouter</button>
                        <button type="button" class="btn btn-danger" id="deleteEvent" style="display:none;">Supprimer</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
